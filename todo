#!/bin/bash
#
# Simple TODO tool
#

TODO=~/.todo
solutions_dir=~/Projects/task-manager/solutions

get_max_todo_item_num()
{
  echo $(awk -F '$' -v max=0 '{if($1>max) {max=$1} } END{print max}' "$TODO")
}

initialization()
{
  [[ ! -f "$TODO" ]] && touch "$TODO"
  [ ! -d "$solutions_dir" ] && mkdir -p "$solutions_dir" 
}

add_solution()
{
  !(("${#1}")) && exit 1
  read -ep "Enter your solution: " result
  echo "Added solution: \"$result\""
  touch "$solutions_dir/$1"
  printf "%s\n" "${result}" > "$solutions_dir/$1"
}

remove_solution()
{
  !(("${#1}")) && exit 1
  if [ -f "$solutions_dir/$1" ]; then
    echo "Removed solution: "$(head -c 100 "$solutions_dir/$1")""
    rm "$solutions_dir/$1"
  fi
}

show_solutions()
{
  if (("${#1}")); then
    [ -f "$solutions_dir/$1" ] && cat "$solutions_dir/$1" || echo "No matched solutions!"
  else
    for solution in $(ls -v $solutions_dir); do
      echo "---=== $(basename $solution) ===---"
      cat "$solutions_dir/$solution"
      echo -e '-------------------------------------\n\n'
    done | less
  fi
}

show_todos_wo_no()
{
  awk -F '$' '/\[ \]/ {print $3}' "$TODO" | less
}

show_todos_w_no()
{
  sed -nE "/\[ \]/ s/\[ \]\\$//p" "$TODO" | column -ts '$' | less
}

show_all_todos_w_no()
{
  column -ts '$' "$TODO" | less
}

clear_todos()
{
  > "$TODO"
}

do_todo()
{
  if (("${#1}")); then
    number=$1
  else
    todo -l
    read -p "Type a number to do: " number
  fi
  echo "Done item: \"$(awk -F '$' -v number=$number '{if($1==number) print $3}' "$TODO")\""
  sed -i --follow-symlinks "/^${number}\\$/ s/\[ \]/[x]/" "$TODO"
  read -n 1 -p "Post solution (Y/n)? " answer; echo
  [[ ${answer:-y} = [Yy] ]] && add_solution "$number"
}

post_solution()
{
  if ! (("${#1}")); then
    number=$1
  else
    sed -nE "/\[x\]/p" "$TODO" | column -ts '$' | less
    read -p "Type a number to post solution for: " number
  fi
  add_solution "$number"
}

undo_todo()
{
  if (("${#1}")); then
    number=$1
  else
    sed -nE "/\[x\]/p" "$TODO" | column -ts '$' | less
    read -p "Type a number to undo: " number
  fi
  echo "Undone item: \"$(awk -F '$' -v number=$number '{if($1==number) print $3}' "$TODO")\""
  sed -i --follow-symlinks "/^${number}\\$/ s/\[x\]/[ ]/" "$TODO"
  remove_solution "$number"
}

remove_todo()
{
  if (("${#1}")); then
    number=$1
  else 
    todo -a
    read -p "Type a number to remove: " number
  fi
  echo "Removed item: \"$(awk -F '$' -v number=$number '{if($1==number) print $3}' "$TODO")\""
  sed -i --follow-symlinks "/^${number}\\$/d" "$TODO"
  remove_solution "$number"
}

show_help()
{
  cat << EOF
<none>   --  Print todos"
  -l     --  List todos with numbers"
  -a     --  List all todos with numbers, including completed"
  -c     --  Clear all todos"
  -d  N  --  Do todo / mark as completed with #N"
  -p  N  --  Post solution for todo #N"
  -s (N) --  Show solutions (with #N)"
  -u  N  --  Undo todo with #N"
  -r  N  --  Remove todo with #N"
EOF
}

add_todo()
{
  max_item_num=$(get_max_todo_item_num)
  echo "Added item: \"${1}\""
  printf "%s\n" "$((max_item_num+1))\$[ ]\$${*}" >> "$TODO"
}

initialization

if ! (($#)); then show_todos_wo_no
elif [[ "$1" == "-l" ]]; then show_todos_w_no
elif [[ "$1" == "-a" ]]; then show_all_todos_w_no
elif [[ "$1" == "-c" ]]; then clear_todos
elif [[ "$1" == "-d" ]]; then do_todo "$2"
elif [[ "$1" == "-p" ]]; then post_solution "$2"
elif [[ "$1" == "-s" ]]; then show_solutions "$2"
elif [[ "$1" == "-u" ]]; then undo_todo "$2"
elif [[ "$1" == "-r" ]]; then remove_todo "$2"
elif [[ "$1" == "-h" ]]; then show_help
else add_todo "$*"
fi
