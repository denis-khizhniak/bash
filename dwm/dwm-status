#!/bin/bash
#
# ~/.dwm-status
#

separator=" | "
interface="wlp3s0"

# Icons
THERMOMETER_ICON="\uf491"
CALENDAR_ICON="\uf073"
CLOCK_ICON="\uf017"
DB_ICON="\uf1c0"
CHIP_ICON="\uf2db"
EMPTY_BATTERY_ICON="\uf244"
HALF_BATTERY_ICON="\uf242"
FULL_BATTERY_ICON="\uf240"
KEYBOARD_ICON="\uf11c"
HEADPHONES_ICON="\uf025"

function join_by()
{
   local spt="$1"
   shift
   res=$(printf "$spt%s" "$@")
   echo ${res:${#spt}}
}
function print_temp() { echo -e "${THERMOMETER_ICON} "$(($(cat /sys/class/thermal/thermal_zone0/temp)/1000))C"" ; }
function print_date() { echo -e "${CALENDAR_ICON} "$(date '+%d.%m.%Y')"" ; }
function print_time() { echo -e "${CLOCK_ICON} "$(date '+%R')"" ; }
function print_ram()
{
  local used_ram=$(free -m | grep '^Mem' | tr -s ' ' | cut -d ' ' -f3)
  local used_ram_h=$(free -h | grep '^Mem' | tr -s ' ' | cut -d ' ' -f3)
  local total_ram=$(free -m | grep '^Mem' | tr -s ' ' | cut -d ' ' -f2)

  echo -e "${DB_ICON} "$(perl -e "printf(\"%.f%\", $used_ram / $total_ram * 100)")""
}
function print_swap() { cat /proc/swaps | awk '{if (NR>1) print $4/$3*100"%"}' ; }
function print_uptime() { uptime | sed 's/.*: //; s/,//g' ; }
function print_cpu() { 
  local cpu="$(top -bn 2 -d 0.1 | grep '^%Cpu' | tail -n 1 | gawk '{print $2+$4+$6}')"
  echo -e "${CHIP_ICON} ${cpu}%" 
}
function print_volume() { amixer -M get Master | tail -1 | sed 's/.*\[\([0-9]*%\)\].*/\1/' ; }
function print_battery() {
  local battery="$(acpi -b | awk -F '[,:] ' '{if ($2=="Charging") print $3" (+)"; else if ($2=="Discharging") print $3" (-)"; else print $3}')"
  local unicode
  
  if (( ${battery%\%} == 0 )); then
    unicode="$EMPTY_BATTERY_ICON"
  elif (( ${battery%\%} <= 50 )); then
    unicode="$HALF_BATTERY_ICON"
  elif (( ${battery%\%} <= 100 )); then
    unicode="$FULL_BATTERY_ICON"
  fi
  echo -e "${unicode} ${battery}"
}
function print_kb_layout() {
  local layout=$( (( ( 16#$(xset q | grep LED | awk '{print $10}') & 16#1000 ) == 16#1000 )) && echo RU || echo EN )
  echo -e "${KEYBOARD_ICON} $layout"
}
function print_weather()
{
  local city=${1:-St. Petersburg}

  result=$(curl --silent https://query.yahooapis.com/v1/public/yql \
             -d q="select item.condition from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"$city\") and u='c'" \
             -d format=json | python -m json.tool)

  if [[ ! $(echo "$result" | grep text) ]]; then
    echo "Sorry the request to yahoo api failed"
    exit 1
	fi

	sky=$(echo "$result" | grep text | cut -d '"' -f4 )
	temperature=$(echo "$result" | grep temp | cut -d '"' -f4 )

	echo "${sky},${temperature}C"
}
function print_song()
{
  local result="$(ncmpcpp --current-song="{%f}|{%a} (%l)")"
  [ ! -z "$result" ] && echo -e "${HEADPHONES_ICON} $result"
}

# Array with info elements
info_elements=( "$(print_cpu)" "$(print_ram)" "$(print_kb_layout)" "$(print_battery)" "$(print_date)" "$(print_time)" )

xsetroot -name "$(join_by "$separator" "${info_elements[@]}")"
